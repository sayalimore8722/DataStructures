/*
Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.
*/

class Solution {
    public String addStrings(String num1, String num2) {
        HashMap<Integer,Integer> ascii_val = new HashMap<Integer,Integer>();
        char[] num_1 = num1.toCharArray();
        char[] num_2 = num2.toCharArray();
        int first = 0, second = 0, len = 0, mod = 0, carry = 0, addition = 0;
        int asc = 48;
        
        StringBuilder sb = new StringBuilder();
        for(int i=0; i<10; i++)
        {
           ascii_val.put(asc,i);
           asc++;
        }
        
        len = Math.max(num_1.length,num_2.length);
        for(int i=1; i<=len; i++)
        {
            first = 0;second = 0;
            if(i<=num_1.length)
                first = ascii_val.get(((int)num_1[num_1.length-i])); 
            if(i<=num_2.length)
                second = ascii_val.get(((int)num_2[num_2.length-i]));
           
            addition = carry + first + second;
            mod = addition%10;
            carry = (addition - mod)/10;
            
            sb.append(mod);
        }
        if(carry > 0)
            sb.append(carry);
        
        return sb.reverse().toString();
        
    }
}
